{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Downloads/Web Development/my-blog/client/src/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  let navigate = useNavigate(); // const [name, setName] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  // const [body, setBody] = useState(\"\");\n\n  const [data, setData] = useState({\n    name: \"\",\n    author: \"\",\n    body: \"\"\n  });\n\n  const handle = e => {\n    const newData = { ...data\n    };\n    newData[e.target.id] = e.target.value;\n    setData(newData); // console.log(newData);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"/add-blog\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: data.name,\n          author: data.author,\n          body: data.body\n        })\n      });\n      await res.json().then(() => {\n        setData({\n          name: \"\",\n          author: \"\",\n          body: \"\"\n        });\n        navigate(\"/\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blog Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: data.name,\n          onChange: e => handle(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"author\",\n          type: \"text\",\n          value: data.author,\n          onChange: e => handle(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blog Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          value: data.body,\n          onChange: e => handle(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"NEiwo0PKfbS1CPNQeIlEc32gMvY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/ayush/Downloads/Web Development/my-blog/client/src/pages/Create.js"],"names":["React","useState","useNavigate","Create","navigate","data","setData","name","author","body","handle","e","newData","target","id","value","handleSubmit","preventDefault","res","fetch","method","headers","JSON","stringify","title","json","then","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Create = () => {\n  let navigate = useNavigate();\n\n  // const [name, setName] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  // const [body, setBody] = useState(\"\");\n\n  const [data, setData] = useState({\n    name: \"\",\n    author: \"\",\n    body: \"\",\n  });\n\n  const handle = (e) => {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n\n    // console.log(newData);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      let res = await fetch(\"/add-blog\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title: data.name,\n          author: data.author,\n          body: data.body,\n        }),\n      });\n      await res.json().then(() => {\n        setData({\n          name: \"\",\n          author: \"\",\n          body: \"\",\n        });\n        navigate(\"/\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"create\">\n        <form onSubmit={handleSubmit}>\n          <label>Blog Title:</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            value={data.name}\n            onChange={(e) => handle(e)}\n            required\n          />\n          <label>Author:</label>\n          <input\n            id=\"author\"\n            type=\"text\"\n            value={data.author}\n            onChange={(e) => handle(e)}\n            required\n          />\n          <label>Blog Body:</label>\n          <textarea\n            id=\"body\"\n            value={data.body}\n            onChange={(e) => handle(e)}\n            required\n          />\n          <button type=\"submit\">Add Blog</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}