{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Downloads/Web Development/my-blog/client/src/pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  // const [name, setName] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  // const [body, setBody] = useState(\"\");\n  const [data, setData] = useState({\n    name: \"\",\n    author: \"\",\n    body: \"\"\n  });\n\n  const handle = e => {\n    const newData = { ...data\n    };\n    newData[e.target.id] = e.target.value;\n    setData(newData); // console.log(newData);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const requestData = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: data.name,\n        author: data.author,\n        body: data.body\n      })\n    };\n    const response = await fetch(\"/blogs\", requestData);\n    const dd = await response.json();\n\n    if (dd.status === 422 || !dd) {\n      console.log(\"invalid\");\n    } else {\n      console.log(\"success\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blog Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: data.name,\n          onChange: e => handle(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"author\",\n          type: \"text\",\n          value: data.author,\n          onChange: e => handle(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Blog Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"body\",\n          value: data.body,\n          onChange: e => handle(e) // required\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"TwfoShqu/6Y6QStgslah0KcgcFE=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/ayush/Downloads/Web Development/my-blog/client/src/pages/Create.js"],"names":["React","useState","Create","data","setData","name","author","body","handle","e","newData","target","id","value","handleSubmit","preventDefault","requestData","method","headers","JSON","stringify","response","fetch","dd","json","status","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Create = () => {\n  // const [name, setName] = useState(\"\");\n  // const [author, setAuthor] = useState(\"\");\n  // const [body, setBody] = useState(\"\");\n\n  const [data, setData] = useState({\n    name: \"\",\n    author: \"\",\n    body: \"\",\n  });\n\n  const handle = (e) => {\n    const newData = { ...data };\n    newData[e.target.id] = e.target.value;\n    setData(newData);\n\n    // console.log(newData);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const requestData = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: data.name,\n        author: data.author,\n        body: data.body,\n      }),\n    };\n\n    const response = await fetch(\"/blogs\", requestData);\n    const dd = await response.json();\n\n    if (dd.status === 422 || !dd) {\n      console.log(\"invalid\");\n    } else {\n      console.log(\"success\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"create\">\n        <form onSubmit={handleSubmit}>\n          <label>Blog Title:</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            value={data.name}\n            onChange={(e) => handle(e)}\n          />\n          <label>Author:</label>\n          <input\n            id=\"author\"\n            type=\"text\"\n            value={data.author}\n            onChange={(e) => handle(e)}\n          />\n          <label>Blog Body:</label>\n          <textarea\n            id=\"body\"\n            value={data.body}\n            onChange={(e) => handle(e)}\n            // required\n          />\n          <button type=\"submit\">Add Blog</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Create;\n"]},"metadata":{},"sourceType":"module"}